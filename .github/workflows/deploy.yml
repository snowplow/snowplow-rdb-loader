name: Deploy

on:
  push:
    tags:
      - '*'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Github
      uses: actions/checkout@v2

    - name: Set up Python to 2.x
      uses: actions/setup-python@v1
      with:
        python-version: '2.x'

    - name: Set up JDK 1.8 for batch transformer
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Set up JDK 11 for loader and streaming transformer
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Install release-manager for Python for transformer
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          release-manager

    - name: Docker login
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and publish Redshift Loader to Docker Hub
      run: sbt "project redshiftLoader" docker:publish

    - name: Build and publish snowflake-loader to Docker Hub
      run: sbt "project snowflakeLoader" docker:publish

    - name: Build and publish transformer-kinesis to Docker Hub
      run: sbt "project transformerKinesis" docker:publish

    - name: Build and publish transformer-batch to S3
      run: .github/deploy.sh transformer_batch $GITHUB_REF
      env:
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

    - name: Build redshift-loader jar
      run: |
        export SKIP_TEST=true
        sbt 'project redshiftLoader' assembly

    - name: Build snowflake-loader jar
      run: |
        export SKIP_TEST=true
        sbt 'project snowflakeLoader' assembly

    - name: Build transformer-batch jar
      run: |
        export SKIP_TEST=true
        sbt 'project transformerBatch' assembly

    - name: Build transformer-kinesis jar
      run: |
        export SKIP_TEST=true
        sbt 'project transformerKinesis' assembly

    - name: Get current version
      id: ver
      run: |
        export PROJECT_VERSION=$(sbt "project common" version -Dsbt.log.noformat=true | perl -ne 'print "$1\n" if /info.*(\d+\.\d+\.\d+[^\r\n]*)/' | tail -n 1 | tr -d '\n')
        echo "::set-output name=project_version::$PROJECT_VERSION"
    
    - name: Create GitHub release and attach jars
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        prerelease: true
        name: ${{ steps.ver.outputs.project_version }}
        tag_name: ${{ steps.ver.outputs.project_version }}
        files: |
          modules/loader/target/scala-2.12/snowplow-rdb-loader-${{ steps.ver.outputs.project_version }}.jar
          modules/loader/target/scala-2.12/snowplow-rdb-redshift-loader-${{ steps.ver.outputs.project_version }}.jar
          modules/transformer-batch/target/scala-2.12/snowplow-transformer-batch-${{ steps.ver.outputs.project_version }}.jar
          modules/transformer-kinesis/target/scala-2.12/snowplow-transformer-kinesis-${{ steps.ver.outputs.project_version }}.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
